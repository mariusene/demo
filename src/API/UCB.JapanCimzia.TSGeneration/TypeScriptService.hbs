/*
    WARNING:

    This file is auto-generated from C# class `{{SourceTypeFullName}}`
    Please do not edit this file by hand. It's going to be automatically overriden after each build of
    `{{TsGenProjectName}}` project.
*/

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { BaseUriService} from './baseuri.service';

{{#if IsAuthServiceRequired}}
import AuthenticationService from 'components/authentication/services/AuthenticationService';
{{/if}}


@Injectable()
export class {{ServiceName}} {

{{#if IsAuthServiceRequired}}
    private get accessToken() {
        return this.authService.getAuthToken();
    }
{{/if}}
    
    constructor(
        private http: HttpClient,
        private baseUriService: BaseUriService) {
    }

{{#each Methods}}

{{#if IsUrlOnly}}
    public {{MethodName}}Url({{InputParameterList}}):string {
        return `{{Uri}}`;
    }
{{else}}
    public {{MethodName}}({{InputParameterList}}): {{#if ReturnIsNotEmpty}}Observable<{{ResponseType}}>{{else}}Observable<object>{{/if}} {
        const uri = this.baseUriService.getBaseUri() + `{{Uri}}`;
        return this.http.{{Verb}}{{#if ReturnIsNotEmpty}}<{{ResponseType}}>{{/if}}(uri{{#if IsNotGet}}{{#if DataParameterName}}, {{DataParameterName}}{{/if}}{{/if}});
    }
{{/if}}
  
    
  {{/each}}
}
